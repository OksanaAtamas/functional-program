#lang racket

;*************Лек 3****************
; ПРОЦЕДУРИ ЯК АРГУМЕНТИ
;========================================
;===============================================================
; Ex14 альтернатива Ex11 з використанням процедур як параметрів
;===============================================================
; -----шаблон процедури
(define (sum term a next b)
   (if (> a b)
       0
       (+ (term a)
       (sum term (next a) next b))))
;------ допоміжна процедура збільшення лічильника на 1
(define (inc n)
  (+ n 1))
;----допоміжна процедура ідентичності повертає значення аргументу
(define (identity x)
  x)
; процедура суми чисел в діапазоні від a до b
(define (sum-integers a b)
      (sum identity a inc b))

(display "example 14 sum of numbers from 1 to 10 =")
(sum-integers 1 10);call procedure

;===============================================================
; Ex15 альтернатива Ex12 з використанням процедур як параметрів
;===============================================================
; розрахунок суми кубів чисел з заданого діапазону
(define (sum-cubes a b)  ; сума кубів чисел з діапазону від а до b
        (suma cube a increment b))

(define (increment n)   ; лічильник чисел
     (+ n 1))

(define (cube x); обчислення куба числа
     ( * x (* x x)))

(define (suma term a next b) ;  щаблон для розрахунку суми
  (if (> a b)
    0
  (+ (term a)
  (suma term (next a) next b))))

(display "example 15 sum of cubes from 1 to 10 =")
(sum-cubes 1 10);call procedure
;===============================================================
; Ex16 альтернатива Ex13 з використанням процедур як параметрів
;===============================================================
; розрахунок числа пі за рядом Лейбніца
;1/(1*3)+1/(5*7)+1/(9*11)+1/(13*15)+….
; шаблон процедури розрахунку суми
(define (sum-a-b term a next b)
  (if (> a b)
    0
  (+ (term a)
  (sum-a-b term (next a) next b))))
; процедура розрахуку числа пі
(define (pi a b)
      (define (pi-term x)
           (/ 1.0 (* x (+ x 2))))
      (define (pi-next x)
           (+ x 4))
      (sum-a-b pi-term a pi-next b))
;call procedure
(display "example 16 Pi=")
(* 8 (pi 1 100000))

;===============================================================
; Ex17 розрахунок інтеграла з використанням процедур як параметрів
;===============================================================
; розрахувати визназний інтеграл в пределах від а до b для функції f,
; для малих dx
(define (integral  f  a  b  dx) ;
       (define (add-dx  x) 
              (+ x dx))
        (* (sum-integral f (+ a (/ dx 2)) add-dx b)
               dx))
;розрахунок кубу числа
(define (cub x)
     ( * x (* x x)))
;шаблон процедури для суми значень
(define (sum-integral term a next b)
  (if (> a b)
    0
  (+ (term a)
  (sum-integral term (next a) next b))))

(display "example 17 integral of cube from 0 to 1 =")
(integral  cub  0  1  0.00001);call procedure

